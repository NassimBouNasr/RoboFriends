{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","card","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAiBgBA,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE1B,OAEA,sBAAKC,UAAU,sDAAf,UACG,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,KAC/C,gCACA,6BAAKF,IACL,4BAAIC,WCYKK,EAnBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEjB,OACE,8BAEAA,EAAOC,KAAI,SAACC,EAAKC,GACf,OAAQ,cAAC,EAAD,CACPR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHCS,SCQVC,EAfG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aAClB,OAEE,qBAAKT,UAAU,MAAf,SAEA,uBAAOA,UAAU,mCAChBU,KAAK,SACLC,YAAY,gBACZC,SAAYH,OCAFI,G,MARA,SAACC,GACd,OACE,sBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,UACEJ,EAAMK,SADR,SC0CWC,E,kDAvCb,aAAc,IAAD,8BACX,gBAaFC,eAAiB,SAACC,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXvB,OAAQ,GACRoB,YAAa,IAJJ,E,qDAQb,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAU,CAAEnB,OAAQ4B,S,oBAQ1C,WACE,MAA+BC,KAAKN,MAA5BvB,EAAR,EAAQA,OAAQoB,EAAhB,EAAgBA,YACVU,EAAiB9B,EAAO+B,QAAO,SAAAC,GACnC,OAAOA,EAAMvC,KAAKwC,cAAcC,SAASd,EAAYa,kBAEvD,OAAKjC,EAAOmC,OAIZ,sBAAKvC,UAAU,KAAf,UAEA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ8B,SART,oBAAIlC,UAAU,KAAd,yB,GA1BKwC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.709c07d3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n const Card = ({name, email, id}) => {\r\n\r\n   return (\r\n\r\n   <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n      <img alt='robots' src={`https://robohash.org/${id}`} />\r\n      <div>\r\n      <h2>{name}</h2>\r\n      <p>{email}</p>\r\n      </div>\r\n    </div>\r\n\r\n   );\r\n }\r\n\r\n export default Card;\r\n","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n  return (\r\n    <div>\r\n    {\r\n    robots.map((card,i) => {\r\n      return (<Card key={i}\r\n       id={robots[i].id}\r\n       name={robots[i].name}\r\n       email={robots[i].email}/>\r\n     );\r\n     })\r\n      }\r\n     </div>\r\n\r\n  );\r\n}\r\n\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n  return (\r\n\r\n    <div className='pa2'>\r\n\r\n    <input className='pa3 ba b--green bg-lightest-blue'\r\n     type='search'\r\n     placeholder='search robots'\r\n     onChange = {searchChange}\r\n     />\r\n\r\n     </div>\r\n\r\n  );\r\n}\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n  return (\r\n    <div style={{overflowY: 'scroll', border: '8px solid black', height: '800px'}}>\r\n     {props.children};\r\n     </div>\r\n   );\r\n};\r\n\r\nexport default Scroll;\r\n","import React,{Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport  SearchBox  from '../Components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\n\r\nclass App extends Component{\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      searchField: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(response => response.json())\r\n    .then(users => this.setState( { robots: users }));\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  }\r\n\r\n\r\n  render() {\r\n    const { robots, searchField} = this.state;\r\n    const filteredRobots = robots.filter(robot =>{\r\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n    })\r\n    if (!robots.length){\r\n      return <h1 className='tc'>Loading</h1>\r\n    }\r\n  return (\r\n    <div className='tc'>\r\n\r\n    <h1 className='f1'>RoboFriends</h1>\r\n    <SearchBox searchChange={this.onSearchChange}/>\r\n    <Scroll>\r\n    <CardList robots={filteredRobots}/>\r\n    </Scroll>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n\n    <App />\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}